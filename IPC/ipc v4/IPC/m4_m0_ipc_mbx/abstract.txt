IPC demo program based on mailbox
-----------------------------------------

- within the file platform_config.h the user needs to specify the system configuration. 


The user can specifiy:

* the priority of the interrupt associated with the IPC communication

* the memory locations of the M0 code/data, location of the mailboxes
	

The linker scatter file needs to be consistent with the provided ROM/RAM addresses in case of changes. 


- according to the number of mailbox desired, the user has to provide a callback table within the Mx_usr_mbx_callbacks.c file. 

In Mx_usr_mbx_callbacks.h file the mailbox numbering is defined. Within the callback table, each callback gets associated to the related mailbox number.

The order in the table is not important, since the callback function addresses are plugged-in at runtime by the IPC initialization routines. 


- The mailbox table defined in ipc_buffer.c needs also to be updated accordingly to accomodate the desired number of mailboxes. There can be 


- since the callbacks are executed within the ISR, their usage is meant for quick operations that need to be performed in reaction to the mailbox event

For normal application processing, message pending flags are provided and shall rather be used, to avoid increasing unnecessarily interrupt latency


- the type of logical messages for the mailboxes are defined within the master_ipc_msg.h, slave_ipc_msg.h file 


- the application runs completely from RAM and exchanges messages between the processors, showing how to post and read from the mailboxes.


 