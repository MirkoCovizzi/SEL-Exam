/******************************************************************************/
/* RAM.INI: RAM Initialization File                                           */
/******************************************************************************/
/* This file is part of the uVision/ARM development tools.                    */
/* Copyright (c) 2009 Keil Software. All rights reserved.                     */
/* This software may only be used under the terms of a valid, current,        */
/* end user licence from KEIL for a compatible version of KEIL software       */
/* development tools. Nothing else gives you the right to use this software.  */
/******************************************************************************/


FUNC void Pre_Setup (void) {

	/* configure M0 for infinite loop */
	_WDWORD(0x10080000,0x00001F00);	/* dummy stack pointer */
	_WDWORD(0x10080004,0x000000D5);	/* reset handler */
	_WDWORD(0x100800D4,0xE7FEE7FE);	/* jump to itself instruction for M0a */
	_WDWORD(0x40043404,0x10080000);	/* M0 shadow pointer. */
	
	/* release M0 from reset to allow Jtag access */
	_WDWORD(0x40053104,(~(_RDWORD(0x40053154))) & (~(1<<24)));

	//	u32Val = (~(u32REG) & (~(1 << 24))); // clear the control bit			
	// LPC_RGU->RESET_CTRL1 = (~( LPC_RGU->RESET_ACTIVE_STATUS1 )) & (0 << 24); //Release M0

}	


FUNC void Setup (void) {
  SP = _RDWORD(0x10000000);                          /* Setup Stack Pointer		 */
  PC = _RDWORD(0x10000004);                          /* Setup Program Counter	*/

  _WDWORD(0xE000ED08, 0x10000000);                    /* Setup Vector Table Offset Register	*/

}

/* prepare M0 for access, if needed */
Pre_setup();

LOAD RAM\LPC43xx_M4_RAM.axf INCREMENTAL

/* set PC, SP, VTOR to ram location */
Setup();


